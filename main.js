!function(){"use strict";function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,r){let{data:i,handleCardPopup:o,handleCardLike:n,handleCardUnlike:a,handleTrashPopup:l}=t;e(this,"_getTemplate",(()=>document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0))),e(this,"generateCard",(()=>{this._element=this._getTemplate(),this._element.setAttribute("id",this._id);const e=this._element.querySelector(".card__footer-title"),t=this._element.querySelector(".card__image");return this._cardLikeButton=this._element.querySelector(".button_type_like"),this._cardLikesCount=this._element.querySelector(".card__footer-likes"),this._cardTrashButton=this._element.querySelector(".button_type_trash"),this._cardImageButton=this._element.querySelector(".button_type_image"),e.textContent=this._title,t.src=this._link,t.alt="A Scenic Photo of ".concat(this._title),this._cardLikesCount.textContent=this.likes.length,this._setEventListeners(),this._element})),e(this,"_handleLikeIcon",(()=>{this._isLiked=!this._isLiked,this._isLiked?this._handleCardLike(this._id):this._handleCardUnlike(this._id)})),e(this,"_checkLikeIcon",(()=>{for(let e=0;e<this.likes.length;e++)if(this.likes[e]._id===this._userId)return this._isLiked=!0,void this._cardLikeButton.classList.toggle("button_type_like_filled")})),e(this,"_checkCardOwnerId",(()=>{this._userId!==this._ownerid&&(this._cardTrashButton.remove(),this._cardTrashButton=null)})),e(this,"handleTrashIcon",(()=>{this._element.remove(),this._element=null})),this._data=i,this._title=i.name,this._link=i.link,this.likes=i.likes,this._id=i._id,this._userId=r,this._ownerid=i.owner._id,this._isLiked=!1,this.likes.includes(this._userId)?this._isLiked=!0:this._isLiked=!1,this._cardSelector=s,this._handleCardPopup=o,this._handleCardLike=n,this._handleCardUnlike=a,this._handleTrashPopup=l}updateLikes(e){this.likes=e.likes,this._cardLikesCount.textContent="".concat(this.likes.length),this._cardLikeButton.classList.toggle("button_type_like_filled")}_setEventListeners(){this._cardTrashButton.addEventListener("click",(()=>{this._handleTrashPopup(this._id)})),this._cardImageButton.addEventListener("click",(()=>this._handleCardPopup({name:this._title,link:this._link}))),this._cardLikeButton.addEventListener("click",this._handleLikeIcon),this._checkCardOwnerId(),this._checkLikeIcon()}}class s{constructor(e,t){var s,r;r=()=>this._inputEls.every((e=>e.validity.valid)),(s="_checkFormValidity")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=document.querySelector(t),this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(".".concat(this._submitButtonSelector))}_showInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleInputError(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}resetValidation(){this.toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._toggleInputError(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const r=document.querySelector(".button_type_edit"),i=document.querySelector(".button_type_edit-alt"),o=document.querySelector(".profile-modal"),n=document.querySelector(".button_type_add"),a=document.querySelector(".card-modal"),l=document.querySelector(".profile"),c=o.querySelector(".form"),h=(document.querySelector(".profile__name"),document.querySelector(".profile__desc"),document.querySelector(".profile__image"),c.querySelector(".form__input_type_name")),d=c.querySelector(".form__input_type_desc"),u=a.querySelector(".form"),_=(u.querySelector(".form__input_type_name"),u.querySelector(".form__input_type_desc"),u.querySelector(".form__submit"),document.querySelector(".image-modal")),m=(_.querySelector(".modal__image"),_.querySelector(".modal__header"),document.querySelector(".delete-modal").querySelector(".form__input-hidden")),p={formSelector:".form",inputSelector:".form__input",submitButtonSelector:"form__submit",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},f={cardPopup:".card-modal",imagePopup:".image-modal",profilePopup:".profile-modal",profilePicPopup:".profile-pic-modal",deletePopup:".delete-modal",cardForm:".card-form",profileForm:".profile-form",profilePicForm:".profile-pic-form",cardTemplate:"#card",userNameSelector:".profile__name",userJobSelector:".profile__desc",userImageSelector:".profile__image"};class k{constructor(e){var t,s;s=e=>{27===e.keyCode&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".button_type_close")}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_closeModalOnRemoteClick(e){e.target===this._popup&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close())),this._popup.addEventListener("mousedown",(e=>this._closeModalOnRemoteClick(e)))}}class y extends k{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".form"),this._inputEls=Array.from(this._form.querySelectorAll(".form__input")),this._submitBtn=this._form.querySelector(".form__submit"),this._submitBtnText=this._submitBtn.textContent}_getInputValues(){const e={};return this._inputEls.forEach((t=>{e[t.name]=t.value})),e}close(){this._form.reset(),super.close()}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitBtn.textContent=e?t:this._submitBtnText}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this.renderLoading(!0);const t=this._getInputValues();this._handleSubmit(t)}))}}class g{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._section=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._section.append(e)}addNewItem(e){this._section.prepend(e)}}const b=e=>{const s=new t({data:e,handleCardPopup:e=>{B.open(e)},handleCardLike:e=>{L.addCardLike(e).then((e=>s.updateLikes(e))).catch((e=>console.log(e)))},handleCardUnlike:e=>{L.removeCardLike(e).then((e=>s.updateLikes(e))).catch((e=>console.log(e)))},handleTrashPopup:e=>{var t;t=e,m.value=t,P.open()}},f.cardTemplate,l.id);return s.generateCard()},S=new class{constructor(e){let{userNameSelector:t,userJobSelector:s,userImageSelector:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s),this._imageElement=document.querySelector(r)}getUserInfo(){return{userName:this._nameElement.textContent,userJob:this._jobElement.textContent}}setUserInfo(e){let{userName:t,userJob:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}setUserImage(e){let{userImage:t}=e;this._imageElement.src=t}}(f),L=new class{constructor(e){this.url=e.baseUrl,this.headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject("Error ".concat(e.status))}getUserData(){return fetch("".concat(this.url,"users/me"),{headers:this.headers}).then(this._checkResponse)}getInitialCards(){return fetch("".concat(this.url,"cards"),{headers:this.headers}).then(this._checkResponse)}submitUserEdit(e){return fetch("".concat(this.url,"users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse)}postNewCard(e){return fetch("".concat(this.url,"cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}addCardLike(e){return fetch("".concat(this.url,"cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then(this._checkResponse)}removeCardLike(e){return fetch("".concat(this.url,"cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then(this._checkResponse)}deleteCard(e){return fetch("".concat(this.url,"cards/").concat(e),{method:"DELETE",headers:this.headers}).then(this._checkResponse)}updateProfilePicture(e){return fetch("".concat(this.url,"users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12/",headers:{authorization:"fa002eaa-cfdc-49b2-ba7a-7640eb468742","content-type":"application/json"}});let E=null;Promise.all([L.getInitialCards(),L.getUserData()]).then((e=>{let[t,s]=e;var r;r=s,S.setUserInfo({userName:r.name,userJob:r.about}),S.setUserImage({userImage:r.avatar}),l.setAttribute("id",r._id),E=new g({items:t,renderer:e=>{const t=b(e);E.addItem(t)}},".cards"),E.renderItems()})).catch((e=>console.log(e)));const v=new y(f.cardPopup,(e=>{const t={name:e.place,link:e.link};L.postNewCard(t).then((e=>{const t=b(e);E.addNewItem(t)})).catch((e=>console.log(e))).finally((()=>{v.close(),v.renderLoading(!1)}))}));v.setEventListeners(),n.addEventListener("click",(()=>{C.resetValidation(),v.open()}));const C=new s(p,f.cardForm);C.enableValidation();const I=new y(f.profilePopup,(e=>{const t={name:e.profile,about:e.desc};L.submitUserEdit(t).then((e=>{S.setUserInfo({userName:e.name,userJob:e.about})})).catch((e=>console.log(e))).finally((()=>{I.close(),I.renderLoading(!1)}))}));I.setEventListeners();const q=new s(p,f.profileForm);q.enableValidation(),r.addEventListener("click",(()=>{!function(){const{userName:e,userJob:t}=S.getUserInfo();h.value=e,d.value=t}(),q.resetValidation(),I.open()}));const P=new y(f.deletePopup,(e=>{const t=document.getElementById(e.cardId);L.deleteCard(e.cardId).then((()=>{t.remove()})).catch((e=>console.log(e))).finally((()=>{P.close(),P.renderLoading(!1)}))}));P.setEventListeners();const B=new class extends k{constructor(e){super(e),this._imageElement=this._popup.querySelector(".modal__image"),this._imageCaption=this._popup.querySelector(".modal__header")}open(e){this._imageElement.src=e.link,this._imageElement.alt="A full size view of ".concat(e.name),this._imageCaption.textContent=e.name,super.open()}}(f.imagePopup);B.setEventListeners();const w=new s(p,f.profilePicForm);w.enableValidation();const T=new y(f.profilePicPopup,(e=>{L.updateProfilePicture(e.profilepic).then((e=>{S.setUserImage({userImage:e.avatar})})).catch((e=>console.log(e))).finally((()=>{T.close(),T.renderLoading(!1)}))}));T.setEventListeners(),i.addEventListener("click",(()=>{w.resetValidation(),T.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,